@use 'sass:map';
@use '../core/style/elevation';
@use '../core/tokens/m3-utils';
@use '../core/tokens/m3';

/// Generate the theming tokens for the component using the system values.
@function get($system: m3.$sys-theme) {
  $tokens: (
    base: (
      select-container-elevation-shadow: elevation.get-box-shadow(2),
    ),
    color: (
      select-panel-background-color: map.get($system, surface-container),
      select-enabled-trigger-text-color: map.get($system, on-surface),
      select-disabled-trigger-text-color:
          m3-utils.color-with-opacity(map.get($system, on-surface), 38%),
      select-placeholder-text-color: map.get($system, on-surface-variant),
      select-enabled-arrow-color: map.get($system, on-surface-variant),
      select-disabled-arrow-color:
          m3-utils.color-with-opacity(map.get($system, on-surface), 38%),
      select-focused-arrow-color: map.get($system, primary),
      select-invalid-arrow-color: map.get($system, error),
    ),
    typography: (
      select-trigger-text-font: map.get($system, body-large-font),
      select-trigger-text-line-height: map.get($system, body-large-line-height),
      select-trigger-text-size: map.get($system, body-large-size),
      select-trigger-text-tracking: map.get($system, body-large-tracking),
      select-trigger-text-weight: map.get($system, body-large-weight),
    ),
    density: (
      select-arrow-transform: map.get((
        0: translateY(-8px),
        -1: translateY(-8px),
        -2: none,
        -3: none,
        -4: none,
        -5: none,
      ), map.get($system, density-scale)),
    )
  );

  @if (map.get($system, version) == 'm2') {
    $tokens: map.deep-merge($tokens, m2-overrides($system));
  }

  @return $tokens;
}

@function m2-overrides($system) {
  @return (
    base: (
      select-container-elevation-shadow: elevation.get-box-shadow(8),
    ),
    color: (
      select-panel-background-color: map.get($system, surface),
    ),
  );
}
